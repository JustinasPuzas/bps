import styles from "./statistics.module.css";
import { NextPage } from "next";
import Head from "next/head";
import { useSession, signIn, signOut } from "next-auth/react";
import { useEffect, useState } from "react";
import axios from "axios";
import React from "react";
import {
  Chart as ChartJS,
  CategoryScale,
  LinearScale,
  BarElement,
  Title,
  Tooltip,
  Legend,
} from "chart.js";
import { Bar } from "react-chartjs-2";

ChartJS.register(
  CategoryScale,
  LinearScale,
  BarElement,
  Title,
  Tooltip,
  Legend
);

const Page: NextPage = () => {
  const { data: session, status } = useSession();
  const [tickets, setTickets] = useState([]);
  const [events, setEvents] = useState([]);

  useEffect(() => {
    const getEvents = async () => {
      const axiosEvents = await axios.get("/api/manager/events");
      console.log(axiosEvents.data);
      setEvents(axiosEvents.data);
    };

    const getTickets = async () => {
      const axiosTickets = await axios.get("/api/event/tickets");
      console.log(axiosTickets.data);
      setTickets(axiosTickets.data);
    };
    getEvents();
    getTickets();
  }, []);

  // Render
  if (status === "loading")
    return (
      <main className={styles.main}>
        <div className={styles.container}> Loading... </div>
      </main>
    );
  if (status === "unauthenticated") signIn();

  return (
    <>
      <Head>
        <title>BPS Statistics</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>
        <div className={styles.cardRow}>
          <div className={styles.card}>
            <ProfitPerEvent events={events} />
          </div>
          <div className={styles.card}>
            <TicketsSoldePerEvent events={events} />
          </div>
        </div>
      </main>
    </>
  );
};

interface TicketsPerEvent {
  events: any[];
}

const ProfitPerEvent = ({ events }: TicketsPerEvent) => {
  const options = {
    responsive: true,
    plugins: {
      legend: {
        position: "top" as const,
      },
      title: {
        display: true,
        text: "Profit per event",
      },
    },
  };

  //   {
  //     label: "Dataset 1",
  //     data: [65, 59, 80, 81, 56, 55, 40],
  //     backgroundColor: "rgba(255, 99, 132, 0.5)",
  //   },

  const data = {
    labels: ["events"],
    datasets: events.map((event: any) => {
      return {
        label: event.name,
        data: [event.Tickets.reduce((a: any, b: any) => a + b.price, 0)],
        backgroundColor: `rgba(${Math.floor(Math.random() * 255)}, ${Math.floor(
          Math.random() * 255
        )}, ${Math.floor(Math.random() * 255)}, 0.5)`,
      };
    }),
  };

  return <Bar options={options} data={data} />;
};

const TicketsSoldePerEvent = ({ events }: TicketsPerEvent) => {
  const options = {
    responsive: true,
    plugins: {
      legend: {
        position: "top" as const,
      },
      title: {
        display: true,
        text: "Tickets sold per event",
      },
    },
  };

  //   {
  //     label: "Dataset 1",
  //     data: [65, 59, 80, 81, 56, 55, 40],
  //     backgroundColor: "rgba(255, 99, 132, 0.5)",
  //   },

  const data = {
    labels: ["events"],
    datasets: events.map((event: any) => {
      return {
        label: event.name,
        data: [event.Tickets.length],
        backgroundColor: `rgba(${Math.floor(Math.random() * 255)}, ${Math.floor(
          Math.random() * 255
        )}, ${Math.floor(Math.random() * 255)}, 0.5)`,
      };
    }),
  };

  return <Bar options={options} data={data} />;
};

export default Page;
